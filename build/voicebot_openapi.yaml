openapi: 3.0.0
info:
  title: Voice agent API
  description: API for creating, updating, retrieving, and managing voiceagents on Plivo's platform. It includes real-time chat interaction via WebSocket or REST API.
  version: 1.0.0
servers:
  - url: https://api.plivo.com/v1/Account/{auth_id}
    description: Plivo Voice agent API Server
tags:
  - name: Voiceagent
    description: API for managing voiceagents
  - name: Functions
    description: CRUD APIs for managing functions
  - name: Knowledgebase
    description: APIs to manage knowledgebase
  - name: voiceagent_model
    x-displayName: Voice Agent Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/VoiceagentResponse"/>

  - name: function_model
    x-displayName: Function Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Function"/>
  - name: knowledgebase_model
    x-displayName: Knowledgebase Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Knowledgebase"/>

x-tagGroups:
  - name: API
    tags:
      - Voiceagent
      - Functions
      - Knowledgebase
  - name: Models
    tags:
      - voiceagent_model
      - function_model
      - knowledgebase_model

paths:
  /Voiceagent:
    post:
      summary: Create a new voiceagent
      description: This endpoint creates a new voice agent with specified parameters, such as name, prompt, knowledgebase, TTS/STT providers, etc.
      tags:
        - Voiceagent
      requestBody:
        description: Details for the new voiceagent
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceagentRequest'
      responses:
        '201':
          description: Voice agent successfully created.
          content:
            application/json:

              schema:
                $ref: "#/components/schemas/VoiceagentResponse"
        '400':
          description: Invalid request parameters.
        '500':
          description: Server error while creating the voiceagent.



    get:
      summary: List all voiceagents
      description: Retrieve a list of all voiceagents associated with the given account.
      tags:
        - Voiceagent
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
          description: Number of results to return per page. Defaults to 20.
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
          description: Number of results to skip before starting to return data. Defaults to 0.
      responses:
        '200':
          description: A list of voiceagents was retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  voiceagents:
                    type: array
                    items:
                      $ref: "#/components/schemas/VoiceagentResponse"

        '500':
          description: Server error while fetching the list of voiceagents.


  /Voiceagent/{voiceagent_id}:
    get:
      summary: Retrieve a voice agent by ID
      description: Fetches details of a specific voice agent using its unique ID.
      tags:
        - Voiceagent
      parameters:
        - in: path
          name: voiceagent_id
          required: true
          schema:
            type: string
          description: The unique ID of the voiceagent.
      responses:
        '200':
          description: Voice agent retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VoiceagentResponse"
        '404':
          description: Voice agent not found.
        '500':
          description: Server error while fetching the voiceagent.



    patch:
      summary: Update an existing voiceagent
      description: Modify details of an existing voice agent by providing its ID and new attributes.
      tags:
        - Voiceagent
      parameters:
        - in: path
          name: voiceagent_id
          required: true
          schema:
            type: string
          description: The unique ID of the voiceagent.
      requestBody:
        description: Attributes to update in the voiceagent.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceagentUpdateRequest'
      responses:
        '204':
          description: Voice agent updated successfully.
        '400':
          description: Invalid request parameters.
        '404':
          description: Voice agent not found.
        '500':
          description: Server error while updating the voiceagent.



    delete:
      summary: Delete a voiceagent
      description: Remove an existing voice agent by providing its ID.
      tags:
        - Voiceagent
      parameters:
        - in: path
          name: voiceagent_id
          required: true
          schema:
            type: string
          description: The unique ID of the voiceagent.
      responses:
        '204':
          description: Voice agent deleted successfully.
        '404':
          description: Voice agent not found.
        '500':
          description: Server error while deleting the voiceagent.



  /Voiceagent/{voiceagent_id}/chat:
    post:
      summary: Chat with a voiceagent
      description: Engage in a conversation with a voice agent by sending a message.
      tags:
        - Voiceagent
      parameters:
        - in: path
          name: voiceagent_id
          required: true
          schema:
            type: string
          description: The unique ID of the voiceagent.
      requestBody:
        description: The message to send to the voiceagent.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: User's message for the voice agent.
                  example: "Can you tell me more about the services you provide?"
      responses:
        '200':
          description: Voice agent response received successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: Response from the voice agent
                    example: "We provide live chat applications, would you like to know more?"

        '400':
          description: Invalid request parameters.
        '404':
          description: Voice agent not found.
        '500':
          description: Server error while communicating with the voiceagent.


  /Voiceagent/{voiceagent_id}/talk:
    post:
      summary: Talk to a voice agent
      description: This URL to be used as answer URL in your Plivo platform.
      tags:
        - Voiceagent
      parameters:
        - in: path
          name: voiceagent_id
          required: true
          schema:
            type: string
          description: The unique ID of the voiceagent.

      requestBody:
        description: This request body is sent by Plivo server to voice agents for calls.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CallUUID:
                  type: string
                  description: "A unique identifier for this call."
                  example: "497f6eca-6276-4993-bfeb-53cbbbba6f08"
                From:
                  type: string
                  description: "The phone number of the party that initiated the call along with the country code. If the call is inbound, then it is the caller’s caller ID. If the call is outbound i.e. initiated via a request to the API, then this is the phone number you specify as the caller ID."
                  example: "+14155552671"
                To:
                  type: string
                  description: "The phone number of the called party with the country code. If the call is inbound, then it’s your incoming phone number. If the call is outbound, then it’s the phone number you provided to call."
                  example: "+14155552672"
                ForwardedFrom:
                  type: string
                  description: "This parameter is set only when the call received by Plivo is a forwarded call. Its value depends on the caller’s carrier. Not all carriers pass this information."
                  example: "+14155552673"
                CallStatus:
                  type: string
                  description: "Indicates the status of the call. It can be 'ringing', 'in-progress', or 'completed'. For outbound calls, it can also be 'busy', 'failed', 'timeout', or 'no-answer'."
                  enum:
                    - ringing
                    - in-progress
                    - completed
                    - busy
                    - failed
                    - timeout
                    - no-answer
                  example: "completed"
                Direction:
                  type: string
                  description: "Indicates the direction of the call. It can either be 'inbound' or 'outbound'."
                  enum:
                    - inbound
                    - outbound
                  example: "inbound"
                ALegUUID:
                  type: string
                  description: "A unique identifier for the first leg of an outbound call. Not present for inbound calls."
                  example: "497f6eca-6276-4993-bfeb-53cbbbba6f09"
                ALegRequestUUID:
                  type: string
                  description: "A unique request identifier returned by Plivo for an API request during an outbound call. Not present for inbound calls."
                  example: "497f6eca-6276-4993-bfeb-53cbbbba6f10"


      responses:
        '200':
          description: Voice agent started audio stream.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
                    description: XML response to start the audio stream using `<Response>` and `<Stream>` objects
                    example: '<Response><Stream bidirectional="false" streamTimeout="120" audioTrack="agenth" statusCallbackUrl="https://<yourdomain>.com/events/" statusCallbackMethod="POST" contentType="raw">wss://yourstream.websocket.io/audiostream</Stream></Response>'

        '400':
          description: Invalid request parameters.
        '404':
          description: Voice agent not found.
        '500':
          description: Server error while communicating with the voiceagent.



  /Function:
    post:
      summary: Create a function
      description: Create a new function in the system.
      tags:
        - Functions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionCreateRequest'
      responses:
        '201':
          description: The function was created successfully.
        '400':
          description: Bad request, invalid data provided.


    get:
      summary: List all functions
      description: Retrieve a list of all functions associated with the given account.
      tags:
        - Functions
      responses:
        '200':
          description: A list of functions was retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  functions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Function'

        '500':
          description: Server error while fetching the list of functions.



  /Function/{function_id}:
    get:
      summary: Get a function
      description: Retrieve details of a specific function using its ID.
      tags:
        - Functions
      parameters:
        - in: path
          name: function_id
          required: true
          schema:
            type: string
          description: The unique ID of the function.
      responses:
        '200':
          description: A function was successfully retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Function"
        '404':
          description: Function not found.


    patch:
      summary: Update a function
      description: Update an existing function by providing its ID.
      tags:
        - Functions
      parameters:
        - in: path
          name: function_id
          required: true
          schema:
            type: string
          description: The unique ID of the function.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionCreateRequest'
      responses:
        '204':
          description: The function was updated successfully.
        '400':
          description: Invalid request data.
        '404':
          description: Function not found.


    delete:
      summary: Delete a function
      description: Delete a specific function using its ID.
      tags:
        - Functions
      parameters:
        - in: path
          name: function_id
          required: true
          schema:
            type: string
          description: The unique ID of the function.
      responses:
        '204':
          description: Function deleted successfully.
        '404':
          description: Function not found.





  /Knowledgebase:
    post:
      summary: Add a document
      description: Upload a PDF, DOCX, or Markdown document to the knowledgebase.
      tags:
        - Knowledgebase
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to be uploaded (PDF, DOCX, or Markdown).

      responses:
        '201':
          description: The document was added to the knowledgebase successfully.
        '400':
          description: Invalid file format or request data.


    get:
      summary: List documents
      description: Retrieve a list of all documents in the knowledgebase.
      tags:
        - Knowledgebase
      responses:
        '200':
          description: A list of documents was retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      $ref: '#/components/schemas/Knowledgebase'
              example:
                documents:
                  - id: "497f6eca-6276-4993-bfeb-53cbbbba6f08"
                    name: "doc1.pdf"
                    url: "https://storage.plivo.com/doc1.pdf"
                  - id: "28af6eca-6276-4993-bfeb-53cbbbba6f08"
                    name: "doc2.docx"
                    url: "https://storage.plivo.com/doc2.docx"
        '500':
          description: Server error while fetching the list of documents.



  /Knowledgebase/{document_id}:
    get:
      summary: Get a document
      description: Retrieve details of a specific knowledgebase document using its ID.
      tags:
        - Knowledgebase
      parameters:
        - in: path
          name: document_id
          required: true
          schema:
            type: string
          description: The unique ID of the knowledgebase document.
      responses:
        '200':
          description: The document was retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Knowledgebase'
        '404':
          description: Document not found.


    delete:
      summary: Delete a document
      description: Delete a specific document from the knowledgebase using its ID.
      tags:
        - Knowledgebase
      parameters:
        - in: path
          name: document_id
          required: true
          schema:
            type: string
          description: The unique ID of the document to be deleted.
      responses:
        '204':
          description: Document deleted successfully.
        '404':
          description: Document not found.

    patch:
      summary: Update a document
      description: Upload a new PDF, DOCX, or Markdown document to the knowledgebase.
      tags:
        - Knowledgebase
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The file to be uploaded (PDF, DOCX, or Markdown).

      responses:
        '204':
          description: The document was updated to the knowledgebase successfully.
        '400':
          description: Invalid file format or request data.


components:
  schemas:
    VoiceagentUpdateRequest:
      type: object
      properties:

        name:
          type: string
          description: The name of the voiceagent.
          example: "Jack"
        welcome_message:
          type: string
          description: Voice agent will use this message as a first message when connected to a call.
          example: "Hi, I am Jack. How can I help you today?"
        prompt:
          type: string
          description: The initial prompt for the agent to set context.
          example: You will keep your sentences short and crisp. You will never reply with more than 2 sentences at a time. You will stick to context throughout. You are test agent, a highly trained Front Desk agent from test. Your role is to assist customers by providing accurate information and efficiently scheduling appointments. Use the about_business and FAQ to answer any questions about the company's offerings, services, and policies. Always stay polite, professional, and concise.

        answer_llm:
          type: object
          description: The configuration for LLM used to answer questions.
          properties:
            provider:
              type: string
              enum:
                - "openapi"
                - "anthropic"
            model:
              type: string
              enum:
                - "gpt-3.5"
                - "gpt-4o"
                - "gpt-4o mini"
                - "claude 3.5 haiku"
                - "claude 3.5 Sonnet"
                - "Claude 3.5 Opus"
        knowledgebase_ids:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of the knowledgebases used by the voiceagent.
        function_ids:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of functions the voice agent can perform.
        tts:
          type: object
          description: The configuration for text-to-speech.
          properties:
            provider:
              type: string
              enum:
                - "deepgram"
                - "openai"

            voice:
              type: string
              enum:
                - "angus"
                - "helios"
                - "stella"
                - "hera"
                - "orpheus"
                - "lune"
                - "orion"
                - "athena"
                - "asteria"
                - "arcas"
                - "perseus"
                - "Zeus"
                - "alloy"
                - "echo"
                - "fable"
                - "nova"
                - "onyx"
                - "shimmer"
        stt:
          type: object
          description: The configuration for speech-to-text.
          properties:
            provider:
              type: string
              enum:
                - "deepgram"
                - "openai"
            language:
              type: string
              enum:
                - af
                - ar
                - hy
                - az
                - be
                - bs
                - bg
                - ca
                - zh
                - hr
                - cs
                - da
                - nl
                - en
                - et
                - fi
                - fr
                - gl
                - de
                - el
                - he
                - hi
                - hu
                - is
                - id
                - it
                - ja
                - kn
                - kk
                - ko
                - lv
                - lt
                - mk
                - ms
                - mr
                - mi
                - ne
                - no
                - fa
                - pl
                - pt
                - ro
                - ru
                - sr
                - sk
                - sl
                - es
                - sw
                - sv
                - tl
                - ta
                - th
                - tr
                - uk
                - ur
                - vi
                - cy

        call_timeout:
          type: integer
          example: 30
          description: Time in seconds before the call times out.


    VoiceagentResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique ID of the voiceagent.
        name:
          type: string
          description: The name of the voiceagent.
          example: "Jack"
        welcome_message:
          type: string
          description: Voice agent will use this message as a first message when connected to a call.
          example: "Hi, I am Jack. How can I help you today?"
        websocket_url:
          type: string
          example: "wss://api.example.com/v1/Account/{auth_id}/Voiceagent/{voiceagent_id}/connect"
          description: The URL for WebSocket communication with the voiceagent.
        call_url:
          type: string
          description: URL to be used to answer calls.
          example: "https://api.plivo.com/v1/Account/{auth_id}/Voiceagent/{voiceagent_id}/talk"

        prompt:
          type: string
          description: The initial prompt for the agent to set context.
          example: You will keep your sentences short and crisp. You will never reply with more than 2 sentences at a time. You will stick to context throughout. You are test agent, a highly trained Front Desk agent from test. Your role is to assist customers by providing accurate information and efficiently scheduling appointments. Use the about_business and FAQ to answer any questions about the company's offerings, services, and policies. Always stay polite, professional, and concise.

        answer_llm:
          type: object
          description: The configuration for LLM used to answer questions.
          properties:
            provider:
              type: string
              enum:
                - "openapi"
                - "anthropic"
            model:
              type: string
              enum:
                - "gpt-3.5"
                - "gpt-4o"
                - "gpt-4o mini"
                - "claude 3.5 haiku"
                - "claude 3.5 Sonnet"
                - "Claude 3.5 Opus"
        knowledgebase_ids:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of the knowledgebases used by the voiceagent.
        function_ids:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of functions the voice agent can perform.
        tts:
          type: object
          description: The configuration for text-to-speech.
          properties:
            provider:
              type: string
              enum:
                - "deepgram"
                - "openai"

            voice:
              type: string
              enum:
                - "angus"
                - "helios"
                - "stella"
                - "hera"
                - "orpheus"
                - "lune"
                - "orion"
                - "athena"
                - "asteria"
                - "arcas"
                - "perseus"
                - "Zeus"
                - "alloy"
                - "echo"
                - "fable"
                - "nova"
                - "onyx"
                - "shimmer"
        stt:
          type: object
          description: The configuration for speech-to-text.
          properties:
            provider:
              type: string
              enum:
                - "deepgram"
                - "openai"
            language:
              type: string
              enum:
                - af
                - ar
                - hy
                - az
                - be
                - bs
                - bg
                - ca
                - zh
                - hr
                - cs
                - da
                - nl
                - en
                - et
                - fi
                - fr
                - gl
                - de
                - el
                - he
                - hi
                - hu
                - is
                - id
                - it
                - ja
                - kn
                - kk
                - ko
                - lv
                - lt
                - mk
                - ms
                - mr
                - mi
                - ne
                - no
                - fa
                - pl
                - pt
                - ro
                - ru
                - sr
                - sk
                - sl
                - es
                - sw
                - sv
                - tl
                - ta
                - th
                - tr
                - uk
                - ur
                - vi
                - cy

        call_timeout:
          type: integer
          example: 30
          description: Time in seconds before the call times out.



    VoiceagentRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the voiceagent.
          example: "Jack"
        welcome_message:
          type: string
          description: Voice agent will use this message as a first message when connected to a call.
          example: "Hi, I am Jack. How can I help you today?"

        prompt:
          type: string
          description: The initial prompt for the agent to set context.
          example: You will keep your sentences short and crisp. You will never reply with more than 2 sentences at a time. You will stick to context throughout. You are test agent, a highly trained Front Desk agent from test. Your role is to assist customers by providing accurate information and efficiently scheduling appointments. Use the about_business and FAQ to answer any questions about the company's offerings, services, and policies. Always stay polite, professional, and concise.

        answer_llm:
          type: object
          description: The configuration for LLM used to answer questions.
          properties:
            provider:
              type: string
              enum:
                - "openapi"
                - "anthropic"
            model:
              type: string
              enum:
                - "gpt-3.5"
                - "gpt-4o"
                - "gpt-4o mini"
                - "claude 3.5 haiku"
                - "claude 3.5 Sonnet"
                - "Claude 3.5 Opus"
        knowledgebase_ids:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of the knowledgebases used by the voiceagent.
        function_ids:
          type: array
          items:
            type: string
            format: uuid
          description: IDs of functions the voice agent can perform.
        tts:
          type: object
          description: The configuration for text-to-speech.
          properties:
            provider:
              type: string
              enum:
                - "deepgram"
                - "openai"

            voice:
              type: string
              enum:
                - "angus"
                - "helios"
                - "stella"
                - "hera"
                - "orpheus"
                - "lune"
                - "orion"
                - "athena"
                - "asteria"
                - "arcas"
                - "perseus"
                - "Zeus"
                - "alloy"
                - "echo"
                - "fable"
                - "nova"
                - "onyx"
                - "shimmer"
        stt:
          type: object
          description: The configuration for speech-to-text.
          properties:
            provider:
              type: string
              enum:
                - "deepgram"
                - "openai"
            language:
              type: string
              enum:
                - af
                - ar
                - hy
                - az
                - be
                - bs
                - bg
                - ca
                - zh
                - hr
                - cs
                - da
                - nl
                - en
                - et
                - fi
                - fr
                - gl
                - de
                - el
                - he
                - hi
                - hu
                - is
                - id
                - it
                - ja
                - kn
                - kk
                - ko
                - lv
                - lt
                - mk
                - ms
                - mr
                - mi
                - ne
                - no
                - fa
                - pl
                - pt
                - ro
                - ru
                - sr
                - sk
                - sl
                - es
                - sw
                - sv
                - tl
                - ta
                - th
                - tr
                - uk
                - ur
                - vi
                - cy

        call_timeout:
          type: integer
          example: 30
          description: Time in seconds before the call times out.

    FunctionCreateRequest:
      type: object
      description: "A schema representing a function object."
      properties:
        name:
          type: string
          description: "The name of the function."
          example: "callTransfer"
        handler_url:
          type: string
          example: "https://yourapp.com/handle-transfer-call"
          description: This url will receive a webhook when the LLM makes a function call.
        description:
          type: string
          description: "A brief description of the function."
          example: "This function transfer the call to a human agent when a user requests."
        user_parameters:
          type: array
          description: "List of user-defined parameters for the function."
          items:
            type: object
            properties:
              name:
                type: string
                description: "The name of the parameter."
                example: Email
              type:
                type: string
                example: "string"
                description: "The data type of the parameter (e.g., string, number, etc.)."
              description:
                type: string
                example: "This is a valid email address of the user"
                description: "Description of the parameter."
              required:
                type: boolean
                example: true
                description: "Indicates if the parameter is required."
        fixed_parameters:
          type: array
          description: "A list of fixed parameters for the function."
          items:
            type: object
            properties:
              name:
                type: string
                description: "Name of the fixed parameter."
                example: "transferToNumber"
              value:
                type: string
                description: "Value of the fixed parameter."
                example: "+91 8080808080"



    Function:
      type: object
      description: "A schema representing a function object."
      properties:
        id:
          type: string
          format: uuid
          description: "Unique identifier for the function."
        name:
          type: string
          description: "The name of the function."
          example: "callTransfer"
        handler_url:
          type: string
          example: "https://yourapp.com/handle-transfer-call"
          description: This url will receive a webhook when the LLM makes a function call.

        description:
          type: string
          description: "A brief description of the function."
          example: "This function transfer the call to a human agent when a user requests."
        user_parameters:
          type: array
          description: "List of user-defined parameters for the function."
          items:
            type: object
            properties:
              name:
                type: string
                description: "The name of the parameter."
                example: Email
              type:
                type: string
                example: "string"
                description: "The data type of the parameter (e.g., string, number, etc.)."
              description:
                type: string
                example: "This is a valid email address of the user"
                description: "Description of the parameter."
              required:
                type: boolean
                example: true
                description: "Indicates if the parameter is required."
        fixed_parameters:
          type: array
          description: "A list of fixed parameters for the function."
          items:
            type: object
            properties:
              name:
                type: string
                description: "Name of the fixed parameter."
                example: "transferToNumber"
              value:
                type: string
                description: "Value of the fixed parameter."
                example: "+91 8080808080"


    Knowledgebase:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique ID of the knowledgebase document.
        name:
          type: string
          example: "Features.pdf"
          description: The name of the document with its extension.
        url:
          type: string
          example: "https://storage.plivo.com/Features.pdf"
          description: The URL where the document can be accessed.

