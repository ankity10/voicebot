"use strict";(self.webpackChunkvoicebot_docs=self.webpackChunkvoicebot_docs||[]).push([[489],{273:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var i=n(4848),s=n(8453);const o={sidebar_label:"Create Voice Agent",sidebar_position:3,title:"Create Voice Agent"},r=void 0,a={id:"create-voice-agent",title:"Create Voice Agent",description:"What is a Voice Agent?",source:"@site/docs/create-voice-agent.md",sourceDirName:".",slug:"/create-voice-agent",permalink:"/docs/create-voice-agent",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Create Voice Agent",sidebar_position:3,title:"Create Voice Agent"},sidebar:"tutorialSidebar",previous:{title:"Steps to use a Voice Agent",permalink:"/docs/Steps"},next:{title:"Adding Functions",permalink:"/docs/adding functions"}},c={},d=[{value:"What is a Voice Agent?",id:"what-is-a-voice-agent",level:3},{value:"Create a Voice Agent",id:"create-a-voice-agent",level:2},{value:"1. Use Python SDK to Create Voice Agent",id:"1-use-python-sdk-to-create-voice-agent",level:3},{value:"2. Newly Created Voice Agent Object",id:"2-newly-created-voice-agent-object",level:3},{value:"Voice Agent Object Definition",id:"voice-agent-object-definition",level:2}];function l(e){const t={admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h3,{id:"what-is-a-voice-agent",children:"What is a Voice Agent?"}),"\n",(0,i.jsx)(t.p,{children:"A voice agent is an object that includes LLM information such as the LLM provider and the specific model to be used, along with a behavior prompt and details about the speech-to-text (STT) and text-to-speech (TTS) models."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"The Python SDK used in example below follows same specifications api and function interface as Plivo's official Python SDK."})}),"\n",(0,i.jsx)(t.h2,{id:"create-a-voice-agent",children:"Create a Voice Agent"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Use Python SDK to create voice agent"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"1-use-python-sdk-to-create-voice-agent",children:"1. Use Python SDK to Create Voice Agent"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'\nimport plivo\n\nclient = plivo.RestClient(auth_id=\'<auth_id>\', auth_token=\'<auth_token>\')\n\nvoiceagent_payload = {\n    "name": "Jack",\n    "welcome_message": "Hi, I am Jack. How can I help you today?",\n    "prompt": ("You will keep your sentences short and crisp. You will never reply with more than 2 sentences at a time. "\n               "You will stick to context throughout. You are test agent, a highly trained Front Desk agent from test. "\n               "Your role is to assist customers by providing accurate information and efficiently scheduling appointments. "\n               "Use the about_business and FAQ to answer any questions about the company\'s offerings, services, and policies. "\n               "Always stay polite, professional, and concise."),\n    "answer_llm": {\n        "provider": "openapi",\n        "model": "gpt-4o"\n    },\n\n    "tts": {\n        "provider": "deepgram",\n        "voice": "angus"\n    },\n    "stt": {\n        "provider": "deepgram",\n        "language": "en"\n    },\n    "call_timeout": 30\n}\n\nvoiceagent = client.voiceagents.create(\n    **voiceagent_payload\n)\nprint(voiceagent)\n\n\n'})}),"\n",(0,i.jsx)(t.h3,{id:"2-newly-created-voice-agent-object",children:"2. Newly Created Voice Agent Object"}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"The newly created voice agent object will not have any functions and knowledgebase associated with it. They have to be added separately."})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n    "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",\n    "name": "Jack",\n    "welcome_message": "Hi, I am Jack. How can I help you today?",\n    "websocket_url": "wss://api.example.com/v1/Account/{auth_id}/Voiceagent/{voiceagent_id}/connect",\n    "call_url": "https://api.plivo.com/v1/Account/{auth_id}/Voiceagent/{voiceagent_id}/talk",\n    "prompt": (\n        "You will keep your sentences short and crisp. You will never reply with more than 2 sentences at a time. "\n        "You will stick to context throughout. You are test agent, a highly trained Front Desk agent from test. "\n        "Your role is to assist customers by providing accurate information and efficiently scheduling appointments. "\n        "Use the about_business and FAQ to answer any questions about the company\'s offerings, services, and policies. "\n        "Always stay polite, professional, and concise."\n    ),\n    "answer_llm": {\n        "provider": "openapi",\n        "model": "gpt-3.5"\n    },\n    "knowledgebase_ids": [\n    ],\n    "function_ids": [\n    ],\n    "tts": {\n        "provider": "deepgram",\n        "voice": "angus"\n    },\n    "stt": {\n        "provider": "deepgram",\n        "language": "af"\n    },\n    "call_timeout": 30\n}\n'})}),"\n",(0,i.jsx)(t.h2,{id:"voice-agent-object-definition",children:"Voice Agent Object Definition"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Field"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"id"}),(0,i.jsx)(t.td,{children:"string <uuid>"}),(0,i.jsx)(t.td,{children:"The unique ID of the voice agent."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"name"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"The name of the voice agent."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"welcome_message"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Voice agent will use this message as the first message when connected to a call."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"websocket_url"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"The URL for WebSocket communication with the voice agent."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"call_url"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"URL to be used to answer calls."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"prompt"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"The initial prompt for the agent to set context."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"answer_llm"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"The configuration for the LLM used to answer questions."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"answer_llm.provider"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:'Enum: "openapi", "anthropic"'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"answer_llm.model"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:'Enum: "gpt-3.5", "gpt-4o", "gpt-4o mini", "claude 3.5 haiku", "claude 3.5 Sonnet", "Claude 3.5 Opus"'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"knowledgebase_ids"}),(0,i.jsx)(t.td,{children:"Array of strings <uuid>"}),(0,i.jsx)(t.td,{children:"IDs of the knowledge bases used by the voice agent."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"function_ids"}),(0,i.jsx)(t.td,{children:"Array of strings <uuid>"}),(0,i.jsx)(t.td,{children:"IDs of functions the voice agent can perform."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"tts"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"The configuration for text-to-speech."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"tts.provider"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:'Enum: "deepgram", "openai"'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"tts.voice"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:'Enum: "angus", "helios", "stella", "hera", "orpheus", "lune", "orion", "athena", "asteria", "arcas", "perseus", "Zeus", "alloy", "echo", "fable", "nova", "onyx", "shimmer"'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"stt"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"The configuration for speech-to-text."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"stt.provider"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:'Enum: "deepgram", "openai"'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"stt.language"}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:'Enum: "af", "ar", "hy", "az", "be", "bs", "bg", "ca", "zh", "hr", "cs", "da", "nl", "en", "et", "fi", "fr", "gl", "de", "el", "he", "hi", "hu", "is", "id", "it", "ja", "kn", "kk", "ko", "lv", "lt", "mk", "ms", "mr", "mi", "ne", "no", "fa", "pl", "pt", "ro", "ru", "sr", "sk", "sl", "es", "sw", "sv", "tl", "ta", "th", "tr", "uk", "ur", "vi", "cy"'})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"call_timeout"}),(0,i.jsx)(t.td,{children:"integer"}),(0,i.jsx)(t.td,{children:"Time in seconds before the call times out."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);